# Generated by Django 5.1.4 on 2025-01-05 15:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_manager', models.BooleanField(default=False)),
                ('phone_number', models.IntegerField(default=0)),
                ('preferred_contact_method_is_email', models.BooleanField(default=True)),
                ('credit_score', models.FloatField(default=0)),
                ('gross_monthly_income', models.FloatField(default=0)),
                ('liquid_monthly_income', models.FloatField(default=0)),
                ('household_income', models.FloatField(default=0)),
                ('fixed_monthly_expenses', models.FloatField(default=0)),
                ('savings_investments', models.FloatField(default=0)),
                ('existing_debt_obligations', models.FloatField(default=0)),
                ('number_current_loans', models.FloatField(default=0)),
                ('number_of_dependents', models.FloatField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoanRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('interest_rate', models.IntegerField()),
                ('amount', models.FloatField()),
                ('duration', models.IntegerField()),
                ('monthly_payment', models.FloatField()),
                ('model_decision', models.IntegerField(choices=[(0, 'waiting'), (1, 'deny'), (2, 'interview'), (3, 'accept')], default=0)),
                ('status', models.IntegerField(choices=[(0, 'waiting'), (1, 'deny'), (2, 'interview'), (3, 'accept')], default=0)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('initial_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('ocurred', models.BooleanField(default=False)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('loan_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.loanrequest')),
            ],
        ),
    ]
